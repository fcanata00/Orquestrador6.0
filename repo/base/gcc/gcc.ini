[meta]
name = gcc
version = 12.2.0
category = base
bootstrap = false       ; true|false
install_root = /usr

# --- SOURCES: arquivos e git (preserva ordem por index) ---
[source]
src1.type = tarball     ; tarball|zip|git|directory
src1.url  = https://ftp.gnu.org/gnu/gcc/gcc-12.2.0/gcc-12.2.0.tar.xz
src1.sha256 = <hex>
src2.type = git
src2.url  = https://gcc.gnu.org/git/gcc.git
src2.revision = v12.2.0
# src2.sha256 not applicable for git (optional)

# --- PATCHES: arquivos remotos OU locais dentro do pacote/patches/ ---
[patches]
patch1.type = url       ; url|local
patch1.url  = https://patches.example/patch1.patch
patch1.sha256 = <hex>
# or local patches stored in meta/<category>/<pkg>/patches/
patch2.type = local
patch2.path = patches/fix-some-issue.patch
patch2.sha256 = <hex>

# --- BUILD: comandos e check option ---
[build]
configure = ./configure --prefix=${install_root}
make = make -j$(nproc)
check = make -k check   ; comando opcional para verificação (executado se presente)
install = make install

# --- ENVIRONMENT: variáveis a exportar e PATH manipulation ---
[environment]
CFLAGS = -O2 -march=native
CPPFLAGS = -I${install_root}/usr/include
LDFLAGS = -L${install_root}/usr/lib
# PATH modificators:
path.prepend = ${install_root}/usr/bin:${install_root}/bin
path.append  = /opt/custom/bin

# --- HOOKS: scripts locais dentro meta/<cat>/<pkg>/hooks/ ou path absoluto ---
[hooks]
pre_download  = hooks/pre_download.sh
post_download = hooks/post_download.sh
pre_build     = hooks/pre_build.sh
post_build    = hooks/post_build.sh
pre_install   = hooks/pre_install.sh
post_install  = hooks/post_install.sh
hooks.ignore_errors = false

# --- UPSTREAM: (para update/checagem de novas versões) ---
[upstream]
check_type = git_tags
check_url = https://gcc.gnu.org/git/gcc.git
version_regex = v([0-9]+\.[0-9]+\.[0-9]+)
